<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.4.1" created="2013-07-14 13:24" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>Rich Tolocka</title>
	<link>http://richtolocka.com</link>
	<description>No such method...</description>
	<pubDate>Sun, 14 Jul 2013 13:24:13 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>http://richtolocka.com</wp:base_site_url>
	<wp:base_blog_url>http://richtolocka.com</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>admin</wp:author_login><wp:author_email>rich.tolocka@gmail.com</wp:author_email><wp:author_display_name><![CDATA[rtolocka]]></wp:author_display_name><wp:author_first_name><![CDATA[Rich]]></wp:author_first_name><wp:author_last_name><![CDATA[Tolocka]]></wp:author_last_name></wp:author>


	<generator>http://wordpress.org/?v=3.4.1</generator>

	<item>
		<title>Outdoor Photos</title>
		<link>http://richtolocka.com/outdoor-photos/</link>
		<pubDate>Sun, 26 Aug 2012 20:04:39 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://richtolocka.com/richssite/?p=62</guid>
		<description></description>
		<content:encoded><![CDATA[I very much enjoy taking pictures in the outdoors; animals and landscapes are my favorites subjects. Some of my favorites are below.

[pwaplusphp]]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>62</wp:post_id>
		<wp:post_date>2012-08-26 20:04:39</wp:post_date>
		<wp:post_date_gmt>2012-08-26 20:04:39</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>outdoor-photos</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="photos"><![CDATA[Photos]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>layout</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>hide_post_title</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>unlink_post_title</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>hide_post_meta</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>hide_post_date</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>hide_post_image</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>unlink_post_image</wp:meta_key>
			<wp:meta_value><![CDATA[default]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>seo_follow</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>seo_noindex</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>DC 52 reviewed</title>
		<link>http://richtolocka.com/dc-52-reviewed/</link>
		<pubDate>Sun, 07 Oct 2012 13:56:29 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://richtolocka.com/?p=107</guid>
		<description></description>
		<content:encoded><![CDATA[Rather than spend my time reviewing the new DC 52, I'll simply re-direct you here:

* <a href="http://www.ign.com/articles/2012/03/09/new-52-progress-report" target="_blank">http://www.ign.com/articles/2012/03/09/new-52-progress-report</a>

This article is pretty accurate in my opinion. I completely agree on "The Dark Knight" - it's pretty bad and I feel horrible for any newbies who pick that issue up, miss Scott Snyder's Batman, and simply give up on Batman as a comic. (Anytime a new movie comes out I always imagine some degree of newfound comic fandom but I might be naive on that).

The "A" on Wonder Woman is intriguing but I'd have to carry it around in a paper bag so as to not incriminate myself...]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>107</wp:post_id>
		<wp:post_date>2012-10-07 13:56:29</wp:post_date>
		<wp:post_date_gmt>2012-10-07 13:56:29</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dc-52-reviewed</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>seo_follow</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>seo_noindex</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Back in it</title>
		<link>http://richtolocka.com/back-in-it/</link>
		<pubDate>Sat, 20 Oct 2012 03:02:15 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://richtolocka.com/?p=116</guid>
		<description></description>
		<content:encoded><![CDATA[After taking a long time off (possibly the longest since I was a teenager), I'm back playing guitar again. In the past, when I don't feel like playing, I usually just trust it. I've found that I usually come back a better player after a break - albeit a little rusty and fumbly - but with a better sense of melody.

Anyhow, this time around I'm trying to take a slightly different tact. In retrospect, I got a little burnt out trying to cover so much jazz territory at once. This time, I'm going to focus on a smaller number of tunes until I'm satisfied with what I'm playing. Here's what I'm working on right now:
<ul>
	<li>Blue in Green</li>
	<li>Girl from Ipanema</li>
	<li>Michelle</li>
</ul>
Pretty easy tunes all around.

The next thing I'm going to do differently is just "ditch the ugly". I've realized I've been avoiding getting rid of the less attractive parts of my arrangements because, well, they're all I've got. This has made some of my repertoire less fun to play, making it less likely I'll actually practice. I'm going to work harder to just throw away those parts and come up with new ones. Hopefully with less material I can spend more time being creative and less just running through tunes.

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>116</wp:post_id>
		<wp:post_date>2012-10-20 03:02:15</wp:post_date>
		<wp:post_date_gmt>2012-10-20 03:02:15</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>back-in-it</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>seo_follow</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>seo_noindex</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Unexplained mysteries (of a tele)</title>
		<link>http://richtolocka.com/unexplained-mysteries-of-a-tele/</link>
		<pubDate>Tue, 23 Oct 2012 01:52:33 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://richtolocka.com/?p=132</guid>
		<description></description>
		<content:encoded><![CDATA[Every three months or so, I forget how the switching system on my CIJ Jerry Donahue Telecaster works. So, mostly for my age-addled brain, here it is. This is sourced from an excellent <a href="http://xhefriguitars.com/page9.html">post</a> on CIJ/MIJ Fender guitars:
<blockquote>"Here is how the STOCK switching works: Position 1) The Bridge PU give Jerry’s favorite customized 1952 vintage sound.Position 2) The Bridge PU and the Neck PU out-of-phase. This gives that unique Strat sound, as it puts a Tele PU and the Vintage Strat PU in an out-of-phase mode. Really cool JD trick. Position 3) The Bridge PU and the Neck PU in parallel, like a stock Tele in the middle switch position, creating a sweet full rhythm sound. Position 4) The Neck pickup going through the tone control. Position 5) The Neck PU by-passing the tone control."</blockquote>
]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>132</wp:post_id>
		<wp:post_date>2012-10-23 01:52:33</wp:post_date>
		<wp:post_date_gmt>2012-10-23 01:52:33</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>unexplained-mysteries-of-a-tele</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>seo_follow</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>seo_noindex</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>28</wp:comment_id>
			<wp:comment_author><![CDATA[Burberry bags outlet]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://cheapburberryonlinesale.webs.com/</wp:comment_author_url>
			<wp:comment_author_IP>108.62.111.58</wp:comment_author_IP>
			<wp:comment_date>2013-05-09 13:26:16</wp:comment_date>
			<wp:comment_date_gmt>2013-05-09 13:26:16</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Burberry bags outlet...</strong>

the beatsofdre.net 50% discount beats headphones to $ 399 and $ 299 more than 45%, beats headphones, all of which will be available free of charge....]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1373513627]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>29</wp:comment_id>
			<wp:comment_author><![CDATA[Louis Vuitton Outlet]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.louisvuittonukprime.co.uk/</wp:comment_author_url>
			<wp:comment_author_IP>49.65.189.109</wp:comment_author_IP>
			<wp:comment_date>2013-05-16 22:20:57</wp:comment_date>
			<wp:comment_date_gmt>2013-05-16 22:20:57</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Louis Vuitton Outlet...</strong>

Hello! I just would like to give you a huge thumbs up for the excellent info you’ve got here on this post. I will be returning to your web site for more soon....]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1373513626]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>8</wp:comment_id>
			<wp:comment_author><![CDATA[Louboutin UK]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://christianlouboutinukoutletshop.webs.com/</wp:comment_author_url>
			<wp:comment_author_IP>110.86.184.213</wp:comment_author_IP>
			<wp:comment_date>2013-04-08 04:04:32</wp:comment_date>
			<wp:comment_date_gmt>2013-04-08 04:04:32</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Louboutin UK...</strong>

Shanghai mall boutique store officially opened on December 17, 2011, the new stores also accomplish the unique style in the stores around, add more elements, for example, was inspired by the tiled roofs in the residential areas of Shanghai are usually ...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1373513635]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>9</wp:comment_id>
			<wp:comment_author><![CDATA[ralph lauren outlet]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ralphlaurenoutletukes3.webs.com/</wp:comment_author_url>
			<wp:comment_author_IP>27.159.233.152</wp:comment_author_IP>
			<wp:comment_date>2013-04-09 02:08:59</wp:comment_date>
			<wp:comment_date_gmt>2013-04-09 02:08:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>ralph lauren outlet...</strong>

Unexplained mysteries (of a tele) | Rich Tolocka...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1373513635]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>10</wp:comment_id>
			<wp:comment_author><![CDATA[r4i]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://r4kart.insanejournal.com/</wp:comment_author_url>
			<wp:comment_author_IP>113.97.135.5</wp:comment_author_IP>
			<wp:comment_date>2013-04-09 08:18:13</wp:comment_date>
			<wp:comment_date_gmt>2013-04-09 08:18:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>r4i...</strong>

Either double major with journalism and creative writing, or a "good" school in an urban area where I could major in journalism and minor in creative writing? I'm only a sophmore in high school but I know I love to write and I don't know what I'd ...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1373513635]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>11</wp:comment_id>
			<wp:comment_author><![CDATA[wholesale jordan shoes]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://sobigdiscount.com</wp:comment_author_url>
			<wp:comment_author_IP>117.26.194.231</wp:comment_author_IP>
			<wp:comment_date>2013-04-09 12:54:50</wp:comment_date>
			<wp:comment_date_gmt>2013-04-09 12:54:50</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>wholesale jordan shoes...</strong>

Unexplained mysteries (of a tele) | Rich Tolocka...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1373513635]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>12</wp:comment_id>
			<wp:comment_author><![CDATA[Longchamp taschen]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.detaschenlongchamps.com/die-geschichte-uber-longchamp-taschen/</wp:comment_author_url>
			<wp:comment_author_IP>220.175.45.172</wp:comment_author_IP>
			<wp:comment_date>2013-04-10 06:47:13</wp:comment_date>
			<wp:comment_date_gmt>2013-04-10 06:47:13</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Longchamp taschen...</strong>

Most of Longchamp taschen those available from fishing tackle shops will do the stellenanzeige, although you can have one made up for you if you want something a Longchamp taschen bit stronger. The Longchamp taschen net needs to be strong because, to b...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1373513635]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>13</wp:comment_id>
			<wp:comment_author><![CDATA[Replica Soccer Jerseys]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.soccerjerseyhome.com</wp:comment_author_url>
			<wp:comment_author_IP>89.218.101.98</wp:comment_author_IP>
			<wp:comment_date>2013-04-10 07:06:39</wp:comment_date>
			<wp:comment_date_gmt>2013-04-10 07:06:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Replica Soccer Jerseys...</strong>

Hi,this is a good place,I like this blog very much,thanks!...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1373513635]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>14</wp:comment_id>
			<wp:comment_author><![CDATA[wholesale designer handbags]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ddiscountdesignerbagsoutlet.webs.com/</wp:comment_author_url>
			<wp:comment_author_IP>60.169.77.110</wp:comment_author_IP>
			<wp:comment_date>2013-04-10 19:40:36</wp:comment_date>
			<wp:comment_date_gmt>2013-04-10 19:40:36</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>wholesale designer handbags...</strong>

replica designer handbags replica designer handbags replica designer handbags...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1373513627]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>15</wp:comment_id>
			<wp:comment_author><![CDATA[buy runescape gold]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://arm2game.wordpress.com/</wp:comment_author_url>
			<wp:comment_author_IP>223.244.233.188</wp:comment_author_IP>
			<wp:comment_date>2013-04-10 23:59:42</wp:comment_date>
			<wp:comment_date_gmt>2013-04-10 23:59:42</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>buy runescape gold...</strong>

If you wantThe pet have a better DPS...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1373513627]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>16</wp:comment_id>
			<wp:comment_author><![CDATA[dwight howard shoes]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://cheapdwighthowardshoes.webs.com/</wp:comment_author_url>
			<wp:comment_author_IP>120.43.21.13</wp:comment_author_IP>
			<wp:comment_date>2013-04-11 18:36:03</wp:comment_date>
			<wp:comment_date_gmt>2013-04-11 18:36:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>dwight howard shoes...</strong>

Sexy, Sky-High, Signature Red-Soled Involving Christian Louboutin. Famous France shoe-designer Christian Louboutin will be the man behind the alluring, sky-high, signature red-soled sneakers, which happen to be seen for the feet with superstars which i...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1373513627]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>17</wp:comment_id>
			<wp:comment_author><![CDATA[Discount Louis Vuitton Belts]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://louisvuittonehandbagoutlet.webs.com/</wp:comment_author_url>
			<wp:comment_author_IP>60.169.77.110</wp:comment_author_IP>
			<wp:comment_date>2013-04-12 03:27:11</wp:comment_date>
			<wp:comment_date_gmt>2013-04-12 03:27:11</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Discount Louis Vuitton Belts...</strong>

Replica louis vuitton purses on sale Replica louis vuitton purses on sale Replica louis vuitton purses on sale...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1373513627]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>18</wp:comment_id>
			<wp:comment_author><![CDATA[Replica Louis Vuitton Scarves]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://louisvuittoncbagssaleonline.webs.com/</wp:comment_author_url>
			<wp:comment_author_IP>60.169.77.110</wp:comment_author_IP>
			<wp:comment_date>2013-04-12 20:54:55</wp:comment_date>
			<wp:comment_date_gmt>2013-04-12 20:54:55</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Replica Louis Vuitton Scarves...</strong>

cheap louis vuitton purses cheap louis vuitton purses cheap louis vuitton purses...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1373513627]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>19</wp:comment_id>
			<wp:comment_author><![CDATA[discount designer bags]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://fcheapdesignerbagsoutlet.webs.com/</wp:comment_author_url>
			<wp:comment_author_IP>60.169.77.110</wp:comment_author_IP>
			<wp:comment_date>2013-04-13 01:20:03</wp:comment_date>
			<wp:comment_date_gmt>2013-04-13 01:20:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>discount designer bags...</strong>

cheap designer bags cheap designer bags cheap designer bags...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1373513627]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>20</wp:comment_id>
			<wp:comment_author><![CDATA[baidu censor]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.baidu.com</wp:comment_author_url>
			<wp:comment_author_IP>74.63.192.11</wp:comment_author_IP>
			<wp:comment_date>2013-04-13 03:48:54</wp:comment_date>
			<wp:comment_date_gmt>2013-04-13 03:48:54</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>baidu censor...</strong>

Other countries censor content and not just rogue regimes such as the Iranian mullocracy. Poor people! http://www.baidu.com...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1373513627]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>21</wp:comment_id>
			<wp:comment_author><![CDATA[Nike Free]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.Skoparmersresort.com/about.cfm</wp:comment_author_url>
			<wp:comment_author_IP>59.58.157.243</wp:comment_author_IP>
			<wp:comment_date>2013-04-13 10:37:39</wp:comment_date>
			<wp:comment_date_gmt>2013-04-13 10:37:39</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>Nike Free...</strong>

helloI liek the post! Composed by Ferrer Ferran, the work will have you feeling every emotion possible. It is based on Biblical writings. This work is performed by the great Banda La Artistica Bunol, a fine ensemble that has been together for many year...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1373513627]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>22</wp:comment_id>
			<wp:comment_author><![CDATA[cheap beats by dre]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://cheapbeatsbydrenflsale.blogspot.com/</wp:comment_author_url>
			<wp:comment_author_IP>108.62.111.38</wp:comment_author_IP>
			<wp:comment_date>2013-04-15 06:51:28</wp:comment_date>
			<wp:comment_date_gmt>2013-04-15 06:51:28</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>cheap beats by dre...</strong>

Can her heart but Be getting more disorderly!...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1373513627]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>23</wp:comment_id>
			<wp:comment_author><![CDATA[click here]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.youtube.com/channel/UCpW8-82TxDTUMN6CB5Pe_vA</wp:comment_author_url>
			<wp:comment_author_IP>110.85.69.42</wp:comment_author_IP>
			<wp:comment_date>2013-04-19 06:49:48</wp:comment_date>
			<wp:comment_date_gmt>2013-04-19 06:49:48</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>click here...</strong>

Unexplained mysteries (of a tele) | Rich Tolocka...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1373513627]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>24</wp:comment_id>
			<wp:comment_author><![CDATA[Telise]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://battalcommon.bligoo.cl</wp:comment_author_url>
			<wp:comment_author_IP>109.202.103.105</wp:comment_author_IP>
			<wp:comment_date>2013-04-20 06:30:49</wp:comment_date>
			<wp:comment_date_gmt>2013-04-20 06:30:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>...[Trackback]...</strong>

[...] What web host are you using? Can I get affiliate hyperlink in your host? I want site loaded up as quickly as yours lol[...]...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1373513627]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>25</wp:comment_id>
			<wp:comment_author><![CDATA[Iris]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://juliusnyholm.tumblr.com</wp:comment_author_url>
			<wp:comment_author_IP>142.4.118.121</wp:comment_author_IP>
			<wp:comment_date>2013-04-22 02:37:47</wp:comment_date>
			<wp:comment_date_gmt>2013-04-22 02:37:47</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>...Links...</strong>

[...]Wow, fantastic weblog structure! How lengthy have you ever been running a blog for?[...]...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1373513627]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>30</wp:comment_id>
			<wp:comment_author><![CDATA[wholesale designer handbags]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://discountdesignerhandbags-outlet.com/</wp:comment_author_url>
			<wp:comment_author_IP>222.186.26.217</wp:comment_author_IP>
			<wp:comment_date>2013-05-20 01:42:24</wp:comment_date>
			<wp:comment_date_gmt>2013-05-20 01:42:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>wholesale designer handbags...</strong>

-- replica designer handbags...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1373513626]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>31</wp:comment_id>
			<wp:comment_author><![CDATA[cheap nike womens air max 90 current]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.airmaxinuk.com/womens-air-max-womens-90-current-c-2_20.html</wp:comment_author_url>
			<wp:comment_author_IP>64.71.162.98</wp:comment_author_IP>
			<wp:comment_date>2013-05-30 04:55:03</wp:comment_date>
			<wp:comment_date_gmt>2013-05-30 04:55:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>...Trackback: More Informations on that topic...</strong>

I must obtain throughout my personal love for the kindness helping people who actually need assist with el born area of great interest. Your own actual resolve for moving the answer about had been good and also have often urged workers at all like me t...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1373513626]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>32</wp:comment_id>
			<wp:comment_author><![CDATA[Skrip]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://www.quora.com/Shigeto-Rzepka/Posts/Dior-Gafas-de-sol-tonos-Mundial</wp:comment_author_url>
			<wp:comment_author_IP>71.19.243.137</wp:comment_author_IP>
			<wp:comment_date>2013-07-01 09:32:30</wp:comment_date>
			<wp:comment_date_gmt>2013-07-01 09:32:30</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>...Trackback: More Informations on that topic...</strong>

[...]Great weblog right here! Additionally your website rather a lot up very fast![...]...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1373513626]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>33</wp:comment_id>
			<wp:comment_author><![CDATA[Sayoka]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://s1366.photobucket.com/user/ouardiahowley/library/?sort=3</wp:comment_author_url>
			<wp:comment_author_IP>192.184.42.151</wp:comment_author_IP>
			<wp:comment_date>2013-07-02 03:46:01</wp:comment_date>
			<wp:comment_date_gmt>2013-07-02 03:46:01</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>...Websites you should visit...</strong>

[...]you made running a blog glance[...]...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1373513626]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Child of DOS makes good</title>
		<link>http://richtolocka.com/child-of-dos-makes-good/</link>
		<pubDate>Sun, 04 Nov 2012 23:54:02 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://richtolocka.com/?p=140</guid>
		<description></description>
		<content:encoded><![CDATA[I'm a child of DOS. Literally. Well, almost literally. The initial spark of interest in technology happened the first time I saw a DOS shell, probably around the age of 10 or 11. I knew all the tricks (and probably still do) - and invested as much time there as any college kid who first discovers that his *nix shell might be a bit more interesting than the girl sitting next to him in the computer lab.<!--more-->

As a result, I've also felt a little slow on *nix hosts; sort of like a good basketball player who's been handed a baseball glove. I've been working lately to improve on my bash skills; in particular grep and regular expressions have been a focal point. Once I overcome my deep-seated anxiety that * is no longer a wildcard value, I think I'll be 80% of the way there...

Here are some links I've found helpful as I've worked to strengthen my grep / regex skills:

* <a href="http://www.zytrax.com/tech/web/regex.htm">http://www.zytrax.com/tech/web/regex.htm</a>
* <a href="http://www.linuxforu.com/2012/06/beginners-guide-gnu-grep-basics-regular-expressions/">http://www.linuxforu.com/2012/06/beginners-guide-gnu-grep-basics-regular-expressions/</a>
* <a href="http://www.panix.com/~elflord/unix/grep.html#expressions">http://www.panix.com/~elflord/unix/grep.html#expressions</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>140</wp:post_id>
		<wp:post_date>2012-11-04 23:54:02</wp:post_date>
		<wp:post_date_gmt>2012-11-04 23:54:02</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>child-of-dos-makes-good</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>seo_follow</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>seo_noindex</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Keepin&#039; On</title>
		<link>http://richtolocka.com/keepin-on/</link>
		<pubDate>Mon, 12 Nov 2012 01:19:31 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://richtolocka.com/?p=145</guid>
		<description></description>
		<content:encoded><![CDATA[More Ruby work this weekend. Here's some (emphasis) COOL LINKS (end emphasis):<!--more-->
<ul>
	<li><a title="Ruby Quizzes" href="http://www.rubyquiz.com/quiz2.html" target="_blank">http://www.rubyquiz.com/quiz2.html</a> - This Secret Santa quiz is pretty deep. I learned a lot from the possible solutions.</li>
	<li><a href="http://ruby-doc.org/docs/Newcomers/ruby.html#interactive" target="_blank">http://ruby-doc.org/docs/Newcomers/ruby.html#interactive</a> - "Things that Ruby Newcomers Should Know" - self explanatory.</li>
	<li><a href="http://www.rubyquiz.com/quiz20.html">http://www.rubyquiz.com/quiz20.html</a> - Another cool quiz I hope to do soon.</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>145</wp:post_id>
		<wp:post_date>2012-11-12 01:19:31</wp:post_date>
		<wp:post_date_gmt>2012-11-12 01:19:31</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>keepin-on</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>seo_noindex</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>seo_follow</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Cloud9...</title>
		<link>http://richtolocka.com/cloud9/</link>
		<pubDate>Mon, 19 Nov 2012 02:30:45 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://richtolocka.com/?p=153</guid>
		<description></description>
		<content:encoded><![CDATA[Based on some recommendations from co-workers (and the need to have a development environment available to me over the upcoming holiday), I went and moved my Rails app up to <a href="https://c9.io/">Cloud9</a>. I can only report full success - a Git push and a rake db:migrate later, I was up and running at a Cloud9-provided development URL. The environment is fully integrated with GitHub - you can actually create a workspace automatically using a GitHub repository URL - awesome.

Along the way, I needed to freshen up on my mad Git skillz (For a few years, I was essentially the configuration manager for my development team. This appealed to my need for organization and ended up being necessary since not many others seemed to care about a proper CM strategy.) Here's some of the best stuff I could find:
<ul>
	<li><a href="http://git-scm.com/book">http://git-scm.com/book</a></li>
	<li><a href="http://cworth.org/hgbook-git/tour/">http://cworth.org/hgbook-git/tour/</a></li>
</ul>
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>153</wp:post_id>
		<wp:post_date>2012-11-19 02:30:45</wp:post_date>
		<wp:post_date_gmt>2012-11-19 02:30:45</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>cloud9</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>seo_noindex</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>seo_follow</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Vim for sorta dummies</title>
		<link>http://richtolocka.com/vim-for-sorta-dummies/</link>
		<pubDate>Thu, 27 Dec 2012 18:34:28 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://richtolocka.com/?p=157</guid>
		<description></description>
		<content:encoded><![CDATA[Like many of my blog posts, this one is mostly to help me remember what I'm learning, but hopefully it helps some of you out. I've been getting my vim skills up to par, and here's a list of the basic commands that I've found useful in getting up and running:<!--more-->
<ul>
	<li>If using Mac, switch your shell to Homebrew style. It's incredibly hard to see the cursor in the default shell and since a big part of Vim is cursor navigation, you'll be far behind the 8 ball if you don't make it easy to see.</li>
	<li>Another grumble I have is that the mouse no workie on Mac. Again, the point of vi is that your hands don't have to leave the keyboard but still...</li>
	<li>To turn line numbers on: :set nu or :set number.</li>
	<li>The basics: type "C" for command mode (i.e. input control commands) and "I" for insert mode, (i.e. edit text).</li>
	<li>Escape: ditch out of insert mode.</li>
	<li>Search for text: type "/searchtextgoeshere" and hit enter. Super valuable.</li>
	<li>Skip ahead from word to word: type "w" in command mode.</li>
	<li>Delete a whole word: put your cursor on the word and type in "dw" in command mode.</li>
	<li>Delete three words: type in "3dw".</li>
	<li>Delete a line: "dd".</li>
	<li>Undo your last change: "u".</li>
	<li>Save the file without exiting: ":w" - presumably for 'write file'.</li>
	<li>Save the file and exit: ":wq" - write file and quit.</li>
	<li>Discard changes and don't save: "q!".</li>
</ul>
&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>157</wp:post_id>
		<wp:post_date>2012-12-27 18:34:28</wp:post_date>
		<wp:post_date_gmt>2012-12-27 18:34:28</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>vim-for-sorta-dummies</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<wp:postmeta>
			<wp:meta_key>seo_follow</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>seo_noindex</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Favorite Wineries</title>
		<link>http://richtolocka.com/?p=169</link>
		<pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://richtolocka.com/?p=169</guid>
		<description></description>
		<content:encoded><![CDATA[<ul>
	<li>Afton</li>
	<li>Veritas</li>
	<li>Delaplane Vineyards</li>
	<li>BOW</li>
	<li>Paradise Springs</li>
	<li>Swedenburg</li>
	<li>Plus that brewpub</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>169</wp:post_id>
		<wp:post_date>2013-01-02 14:23:37</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>seo_follow</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>seo_noindex</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Understanding the Rails asset pipeline</title>
		<link>http://richtolocka.com/understanding-the-rails-asset-pipeline/</link>
		<pubDate>Sat, 09 Feb 2013 04:04:09 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://richtolocka.com/?p=172</guid>
		<description></description>
		<content:encoded><![CDATA[In general, using the Rails asset pipeline to include javascript with your application is preferable to other options. Yet the Rails asset pipeline has some quirks to it ('magic!') that can frustrate newbies trying to understand this Rails feature. I've summarized some of the basic principles surrounding the Rails asset pipeline below, as well as a few of the quirks that can confound effective usage of the pipeline by Rails beginners.
<h3>Three is the magic number</h3>
There are three possible places to put your js files for inclusion into the assets pipeline:

- app/assets/javascripts - assets that are owned by the application, such as custom images, JavaScript files or stylesheets.
- vendor/assets/javascripts - your own libraries’ code that doesn’t really fit into the scope of the application or those libraries which are shared across applications.
- lib/assets/javascripts - assets that are owned by outside entities, such as code for JavaScript plugins and CSS frameworks.

Substitute 'css' for 'javascripts' for including css into the asset pipeline.
<h3>Understanding the manifest</h3>
Placing your file into these three locations is not enough. You still need to instruct Rails to include them, what order to include them, and where they are located. To do this, use a syntax as seen below to form <em>directives</em> which are added to the <em>application.js</em> file manifest:

//= require jquery
//= require jquery_ujs
//= require_tree .

What is somewhat confusing to newbies is that the default "application.js" manifest file has a .js extension. Moreover, note that the includes files list above do not have a .js extension. This is because Rails looks at the extension of your manifest to determine what type of files you're including.

Unless you have a need to load files in your app/assets/javascripts folder in order, there is no need to explicitly list your js files in a manifest. The following command can be used to load your files and is frequently seen in examples:

//= require_tree .

Note that this command does not load files outside of the app/assets/javascripts folder; you'll need to reference those explicitly one-by-one in your application.js file, <em>or</em> create an index.js file that references those files, and then reference <em>that </em>file in your application.js. Simple, huh?
<h3>Tags</h3>
Almost done. You probably have an application.html.erb file which is essentially your layout container template. Make sure the following statements are in this file:

&lt;%= stylesheet_link_tag "application" %&gt;
&lt;%= javascript_include_tag "application" %&gt;

Here's where the 'magic' stops; if you're in development mode, you'll be able to see (and troubleshoot) the CSS and JS files being included in your app via 'view source'.

One other tip - the majority of the documentation surrounding the form helpers listed above are actually located in the "Layouts and Rendering" section of the Rails docs, <em>not </em>in the Asset Pipeline.

&nbsp;

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>172</wp:post_id>
		<wp:post_date>2013-02-09 04:04:09</wp:post_date>
		<wp:post_date_gmt>2013-02-09 04:04:09</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>understanding-the-rails-asset-pipeline</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>seo_follow</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>seo_noindex</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Partial to Convention...</title>
		<link>http://richtolocka.com/partial-to-convention/</link>
		<pubDate>Tue, 19 Mar 2013 01:09:03 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://richtolocka.com/?p=182</guid>
		<description></description>
		<content:encoded><![CDATA[Partials are an intriguing part of Rails for me. I've had mixed results with dynamic inclusion going back to the days &lt;jsp:include&gt;. It was possible to get some fair-to-middling code re-use going, but exceptional cases and the extra wiring required made it difficult to maintain in practice. Rails use of convention allows you to avoid explicit wiring together of Views and Partials and allow for some huge time saving conveniences. Some basics first:
<h3>Naming Conventions</h3>
Partials get an underscore in their name to distinguish them from ordinary views. Yet, within the context of a view, you reference the partial without the underscore. For example, '_title.html.erb' can be called using:
<pre>&lt;% render "title" %&gt;</pre>
<h3>JQuery and Partials</h3>
If you're seeking to refresh a portion of your page using JQuery, you'll need to get smart on partials. That's because the mechanism to re-render a portion of your view uses... you guessed it, the "render" statement. Rails is smart enough to return a .js.erb template for remote calls. So, you can put a render statement into that .js.erb that can update any referenced ID on the page.

So, let's imagine you're refreshing a list of book titles based on user search via AJAX. You'll need something like this in a 'search.js.erb' -
<pre>$("#book-list-table-body").html("&lt;%= escape_javascript(render(@books))%&gt;");</pre>
In this case, this requires the book list itself to be built using a partial to allow for this form of directed construction.
<h3>Let's Get Conventional</h3>
Rails is smart enough to render a view called 'book.html.erb' if you render @book. But upon running the previous <code>'render(@books)'</code> code, you get an error like,
<pre><code>Missing partial books/book</code></pre>
Hmm...what's that all about? Well, turns out Rails is smart enough to know that you're rendering a collection of books, and will iterate through your collection using the '_book.html.erb' partial.

So awesome. Any old-school Java programmer who's wasted years iterating through collections to output HTML table content can appreciate the beauty and simplicity of this approach. Have I revealed too much? :-)

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>182</wp:post_id>
		<wp:post_date>2013-03-19 01:09:03</wp:post_date>
		<wp:post_date_gmt>2013-03-19 01:09:03</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>partial-to-convention</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>seo_follow</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>seo_noindex</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>27</wp:comment_id>
			<wp:comment_author><![CDATA[scarpe hogan]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://hogan.caldoniasvolleyball.com/</wp:comment_author_url>
			<wp:comment_author_IP>222.62.172.159</wp:comment_author_IP>
			<wp:comment_date>2013-05-01 11:14:06</wp:comment_date>
			<wp:comment_date_gmt>2013-05-01 11:14:06</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[<strong>scarpe hogan...</strong>

Boutique Le MondeAccueil DVD CD Livres Hors-séries Unes du Monde Sélection du mois Partenaires Le MondeAnnonces auto Annonces immo Annonces emploi Rencontres Tirages photo Formation anglais Boutique Vins Location vacances Shopping Comparateur crédit H?...]]></wp:comment_content>
			<wp:comment_approved>trash</wp:comment_approved>
			<wp:comment_type>trackback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
				<wp:meta_value><![CDATA[0]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
				<wp:meta_value><![CDATA[1373513627]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>My bootstrap typeahead example</title>
		<link>http://richtolocka.com/my-bootstrap-typeahead-example/</link>
		<pubDate>Sun, 24 Mar 2013 03:06:42 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://richtolocka.com/?p=188</guid>
		<description></description>
		<content:encoded><![CDATA[After struggling for a few weeks (well, a few weeks at night, when not practicing banjo or hanging with my gal instead of doing development), I got my bootstrap typeahead working, all on my own. Well, actually, with the help of these guys:
<ul>
	<li><a href="http://mark.stratmann.me/content_items/model-driven-typeahead-inputs-with-bootstrap-2-2-2-rails-3-2">Mark Stratmann's blog post</a></li>
	<li><a href="http://www.webmaster-source.com/2012/11/07/getting-more-from-twitter-bootstraps-typeahead-library/">Not sure who this guy is but his post helped too</a></li>
</ul>
So, in the spirt of sharing as well as possibly helping somebody else navigate this less-than-explicitly documented method, here's my typeahead code, along with a tip down below that might help others.

<!--more-->
<h4>Controller Code</h4>
<pre># JSON only
 def names
    @names = Title.pluck(:name)
    render :json =&gt; @names, :content_type =&gt; Mime::JSON
 end</pre>
<h4>View Code</h4>
<pre>&lt;%= text_field_tag :searchfield, params[:search] %&gt;</pre>
<h4>JS typeahead declaration</h4>
<pre>&lt;script&gt;
$(document).ready(function() {
 $("#searchfield").typeahead({
    minLength: 1,
    source: function(query, process) {
       $.get('/titles/names', { q: query, limit: 8 }, function(data) {
          process(data);
 });
 }
 });
});
&lt;/script&gt;</pre>
<h4>A difference...</h4>
Most examples have a
<pre>"<span style="font-family: Consolas, Monaco, monospace; font-size: 12px; line-height: 18px;">process(JSON.parse(data));"</span></pre>
where I'm just calling "process(data)", but this caused me an error, something along the lines of "Invalid Token A". I switched to "JQuery.parseJSON" - that didn't work either. After doing some debugging and coming to the conclusion that it was valid JSON being returned, I simply removed the parse calls and all worked fine... I guess I'll figure out why down the line.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>188</wp:post_id>
		<wp:post_date>2013-03-24 03:06:42</wp:post_date>
		<wp:post_date_gmt>2013-03-24 03:06:42</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>my-bootstrap-typeahead-example</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="bootstrap"><![CDATA[Bootstrap]]></category>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>seo_follow</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>seo_noindex</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Demystifying Ruby... but not too much (pt. 2)</title>
		<link>http://richtolocka.com/demystifying-ruby-but-not-too-much-pt-2/</link>
		<pubDate>Sun, 14 Apr 2013 02:16:22 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://richtolocka.com/?p=193</guid>
		<description></description>
		<content:encoded><![CDATA[As a long time Java programmer who has made the switch to Ruby, I've honed in a few things that once understood, help make Ruby a lot more readable and fun for those coming from similar backgrounds. I'll tackle these below in this post.

<!--more-->
<h3>Symbols</h3>
What is a symbol? Symbols defy a clean explanation, and are the subject of countless blog posts basically saying that. My definition: a symbol is a non-mutable storage device for a String value. As a reformed Java developer, I see them as a far less verbose (and safer) alternative to something like the following:
<pre>private static final String WOW_THIS_TAKES_A_LOT_OF_TYPING = "fahrenheit"
thermostat.some_method(WOW_THIS_TAKES_A_LOT_OF_TYPING)</pre>
Let's try this instead:
<pre>thermostat.some_method(:fahrenheit)</pre>
Symbols are critical to learn prior to taking on Hash options, my next subject, as they are significantly intermingled.
<h3><span style="font-size: 1.17em; font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; line-height: 19px;">Hash options</span></h3>
Ruby allows for the setting of default values for method parameters. In order to prevent wasting time repeatedly passing in null values like the following example:
<pre>thermostat.do_something_im_freezing(top_temp, current_temp, null, null, null)</pre>
Ruby allows you to pass in only the values you need for that situation. This is accomplished through code like the following:
<pre><code>class Theromostat </code></pre>
<pre><code>def </code>do_something_im_freezing(options = {})</pre>
<pre><code> options = {top_temp: 85, current_temp: 65, emergency_heat: false, auxiliary_heat: false}.merge(options)</code></pre>
<pre><code></code><code>end</code></pre>
This can now be flexibly invoked like this:
<pre>thermostat.do_something_im_freezing(:top_temp=&gt;80, current_temp=&gt;70)</pre>
<h3><span style="font-size: 1.17em; font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; line-height: 19px;">Each</span></h3>
Each is the generally preferred "Ruby way" of looping through a data structure. It's fairly simple, but there are a few variations to be aware of. The first example is an each statement that only contains a single line of code. This non-verbose variant is as follows:
<pre>houses.each { | house | house.turn_off_heat_freeze_occupants | }</pre>
For the Rails guys, you'll note that there is no reverse pluralization going on here - we could have replaced 'house' with 'dog' and it would have worked fine.

To extend your code across multiple lines of code, use the "do" statement. That looks like:
<pre>houses.each do | house |</pre>
<pre>   house.turn_off_heat_freeze_occupants</pre>
<pre>   house.play_maniacal_laughing_sound_effect</pre>
<pre>end</pre>
There is another "each" variant to be aware of, surrounding hashes. To loop through a hash, you can use a very similar syntax that is fairly self explanatory; note that the first value is the key and the second is the value:
<pre><span style="font-family: Consolas, Monaco, monospace; font-size: 12px; line-height: 18px;">houses.each { | last_name, house | puts last_name | }</span></pre>
or
<pre>houses.each do | last_name, house |</pre>
<pre>   puts last_name</pre>
<pre>   house.turn_off_heat_freeze_occupants</pre>
<pre>end</pre>
<h3>And Some Candy</h3>
Lest this post be completely dry, here's some Ruby sugar. Most Java guys will have done "count off" loops, iterating through your code block until some counter has reached a literal number, like 5. In Ruby, do this instead:
<pre>5.times do</pre>
<pre>   puts " Just what do you think you're doing, Dave?"</pre>
<pre>end</pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>193</wp:post_id>
		<wp:post_date>2013-04-14 02:16:22</wp:post_date>
		<wp:post_date_gmt>2013-04-14 02:16:22</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>demystifying-ruby-but-not-too-much-pt-2</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>seo_follow</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>seo_noindex</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Demystifying Ruby... but not too much (pt. 1)</title>
		<link>http://richtolocka.com/rubys-fly-for-the-java-guy/</link>
		<pubDate>Sun, 07 Apr 2013 23:24:36 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://richtolocka.com/?p=199</guid>
		<description></description>
		<content:encoded><![CDATA[Ok, dumb title. The point of this blog post (first of two) is to cover a few of what I think are the most important and basic Ruby-isms for a reforming Java developer to learn. The quicker you learn these, the fast you'll be off and reading Ruby. This post covers the easy stuff; the next will cover symbols, hash options, and the each statement.
<h3>Console output</h3>
If you're a lazy logger like me, you've probably used the following convention a lot during the course of normal day-to-day development:
<pre>System.out.println("Wow I've typed that a lot over the last 15 years…")</pre>
The Ruby gods have destroyed this for the crime of being too verbose. Check this:
<pre>puts "Wow, my fingers feel awesome"
p "They don't hurt like they used to!"</pre>
<h3>The "pound bracket"</h3>
You might be used to doing "in-string" expressions like the following in Java -
<pre>String myDog = "Border Terrier";
System.out.println("My dog is a" + myDog.toUpperCase());
System.out.println("He's about " + (7 + 4) + " years old.);</pre>
The pound bracket semantic is used to allow for more concise handling of in-string operations. For example, see the following -
<pre>p "My dog is a #{'border terrier'.upcase}"
p 'I got him about #{4+3} years ago' # ooops, botch-a-rific</pre>
The second example is illustrative of the difference between single quotes and double quotes - single quotes are not evaluative for expressions. This will work just fine:
<pre>p 'I got him about #{4+3} years ago' # whew!</pre>
<h3>Incrementing variables</h3>
A pretty basic Java concept is the increment operator. For example, you might count off a loop sequence using the following convention:

while ( i &lt; 10)
{
// do something cool, act naturally
// i++
}

As a (reforming) Java developer you might be stunned to find out that this convention doesn't exist in Ruby. Well, maybe not stunned... Instead, this is the Ruby increment operator:
<h4>i += 1</h4>
<h3>Return to Me</h3>
Unlike Java, Ruby does not require you to declare a method as returning anything of any particular type. Likewise, a Ruby method doesn't require you explicitly return something in order to return something, dig? So, for example, the following code returns the last evaluated expression:
<pre>def say_adios(name)
   “Goodbye, ” + name
end</pre>
Some Java developers can't stand this, claiming it's difficult to read and can make it hard to figure out where your method is exiting and what value it's returning, particularly when you have a complex series of exiting loops. They argue that sometimes it's better to use explicit returns to make your code clearer and more concise.

In general, I agree with that, but can't deny it's really convenient to not have to type that extra return statement for a relatively short utility method.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>199</wp:post_id>
		<wp:post_date>2013-04-07 23:24:36</wp:post_date>
		<wp:post_date_gmt>2013-04-07 23:24:36</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rubys-fly-for-the-java-guy</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>seo_follow</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>seo_noindex</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Understanding Modules</title>
		<link>http://richtolocka.com/understanding-modules/</link>
		<pubDate>Sun, 05 May 2013 15:45:48 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://richtolocka.com/?p=222</guid>
		<description></description>
		<content:encoded><![CDATA[Modules are a great gateway to understanding some key features of both Ruby and Rails.

<!--more-->
<h3>The Basics</h3>
It's notable that you can do a good bit of Rails development without noticing the innocuous "double dots" at the top of your ActiveRecord class. Here's an example, so you know what I'm referring to:
<pre>class HauntedHouse &lt; ActiveRecord::Base</pre>
As a former C++/Java/.net/whatever developer, you'll probably intuit that the "&lt;" sign means "inherits from". Awesome. But about the "::" symbol? And under the covers, what the heck is "ActiveRecord::Base"?

In this case, ActiveRecord is a module. Modules in Ruby have no strict corollary in other languages, but at minimum can be considered useful groupings of code for organizational purposes as well as prevention of namespace collisions. (they have other uses as well, more later).

The double-colons are used to establish the namespace for the Base class; in this case, Base is a class that "lives" within ActiveRecord. By establishing that this class lives within the ActiveRecord module, we now can be sure that we're inheriting from the *right* Base class.

So is that all Modules are good for? Not even close. Modules are also used to conveniently provide functionality to other classes through inclusion or extension.
<h3>Inclusion</h3>
What is inclusion all about? Well, shockingly, inclusion allows you to include another module's methods into your class for you to use as instance methods. The syntax is pretty easy.
<pre>class HauntedHouse
 include PortalToHell
end</pre>
<pre>my_haunted_house = HauntedHouse.new
my_haunted_house.openPortalToHell</pre>
Full coverage of inclusion is beyond this blog post, but the best known examples of inclusion in Ruby are Comparable and Enumerable. For each of these, for the cost of implementing a method for each (the "spaceship" and "each" methods, respectively) you get the benefit of all their methods at the instance level.

These are examples of 'mix-ins' - Ruby doesn't support multiple inheritance, but similar to the way Java worked around this with interfaces, Ruby has provided mix-ins as a functional equivalent.
<h3>Extension</h3>
You can also extend modules; this gives you the ability to utilize a modules' methods at the class level.
<pre>class HauntedHouse
 extend ShamblingBeastFactory
end</pre>
<pre>HauntedHouse.buildShamblingBeast(:large_size)</pre>
Note that the "Extension" terminology can be a bit confusing to some, particular those who view inheritance as a form of extension (here it isn't).
<h3>Rails Concerns</h3>
It's worth mentioning here (and I may dedicate a blog post to this) that there is another method of code re-use being employed on the Rails side of life. Rails "Concerns" are a way of including functionality into another class, and is provided through the ActiveSupport module, a collection of Rails' utilities and part of Rails Core. More specifically, Concerns facilitates easy mix-in of code to the ActiveRecord class, which allows you to re-use code at a lower level without having to constantly include or extend functionality through, say, 200 ActiveRecord classes.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>222</wp:post_id>
		<wp:post_date>2013-05-05 15:45:48</wp:post_date>
		<wp:post_date_gmt>2013-05-05 15:45:48</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>understanding-modules</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>
		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>seo_follow</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>seo_noindex</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Ruby strings - cheatsheet</title>
		<link>http://richtolocka.com/ruby-string-function-cheatsheet/</link>
		<pubDate>Sun, 19 May 2013 20:41:59 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://richtolocka.com/?p=237</guid>
		<description></description>
		<content:encoded><![CDATA[Ahh... cheat sheets; the weekend programmer's crutch. Nobody likes a cheater...

<!--more--><!--more-->

This post is entirely selfish - a cheat sheet covering Ruby's string functions. This way, I guess I don't have to worry about losing it since its on my blog!
<h3>Array join</h3>
Not really a String method, I've included it here because it's commonly used when mucking about with Strings. Join takes the contents of an array and returns it as a String, using the character you've supplied as the separator (optional).
<pre>["Monsters", "roam", "with", "impunity"].join #=&gt; "Monstersroamwithimpunity"
["Monsters", "roam", "with", "impunity"].join(" ") #=&gt; "Monsters roam with impunity"</pre>
<h3>Concatenate</h3>
Two ways to do this, both of which have differing implications for memory management.
<pre>little_friend = "little friend"
puts "Say hello to my " + little_friend.to_s #=&gt; "Say hello to my little friend"
puts "Say hello to my " &lt;&lt; little_friend.to_s #=&gt; same
puts "Say hello to my ".concat(little_friend) #=&gt; same</pre>
<h3>Chop</h3>
Removes the last character from the string. Note that Chomp is noted to be safer if record separators are involved, as Chomp will not impact the String if for some reason the record separator is missing.

Note that Chop can usefully be combined with the "times" operator for cool outcomes:
<pre>villain = "the joker's make-up"
10.times do villain.chop! end 
puts villain #=&gt; the joker</pre>
<h3>Include?</h3>
Self-explanatory.
<pre>batman = "batman"
puts batman.include?("bat") #=&gt; true</pre>
<h3>Split</h3>
Essentially the inverse of join, used to return an array from a String; separator is optional once again.
<pre>puts "We're stockpiling for the rise of the mutants.".split #=&gt; ["We're", "stockpiling", "for", "the", "rise", "of", "the", "mutants".]</pre>
<h3>Squeeze</h3>
Used to remove extraneous repeats of characters; super useful in data cleansing. Check it out:
<pre>puts "Bruce     Wayne".squeeze #=&gt; "Bruce Wayne"</pre>
<pre>puts "Arkkhamm Asylumm".squeeze #=&gt; "Arkham Asylum"</pre>
<pre>puts "Harley Quinn".squeeze(" ") #&gt; "Harley Quinn"</pre>
<h3>Start_with</h3>
Self explanatory, but Java guys note that it's "start_with", not "starts_with", and mind those question marks.
<pre>puts batman.start_with?("bat") #=&gt; true</pre>
<h3>Strip</h3>
Strip removes both leading and trailing whitespace. Both lstrip and rstrip will remove leading or trailing whitespace, respectively:
<pre>puts " the mad monk ".strip #=&gt; "the mad monk"</pre>
<h3>String times Integer</h3>
Returns a string repeated as many times as requested, as in:
<pre>puts "Run" * 5 &lt;&lt; " they're gaining on us" #=&gt; "Runrunrunrunrun they're gaining on us."</pre>
<h3>Fun And Interesting Ones</h3>
A few I doubt I'll ever use, but fun nonetheless.
<h4>Clear</h4>
"clear" is used to clear out a String, or as the Ruby doc puts it, "make a String empty". Anybody else find it interesting that this one doesn't have a bang at the end of it?
<pre>puts hoss.clear #=&gt; ""</pre>
<h4>Center</h4>
Presumably useful for somebody building an ASCII art generator, centers the string using the width provided and using the pad characters if supplied (optional).
<pre>"batman's enemies".center(4) #=&gt; "batman's enemies"</pre>
<pre>"batman's enemies".center(40, "x") #=&gt; "<span style="font-family: Georgia, 'Times New Roman', 'Bitstream Charter', Times, serif; font-size: 13px; line-height: 19px;">xxxxxxxxxxxxbatman's enemiesxxxxxxxxxxxx"</span></pre>
<h4>Intern</h4>
Returns the <code>Symbol</code> corresponding to <em>str</em>, creating the symbol if it did not previously exist. Most notably, this will allow you to create symbols that might be syntactically permitted using the ":xxxx" method.

<span style="font-family: Consolas, Monaco, monospace; font-size: 12px; line-height: 18px;">'batman and robin'.to_sym #=&gt; :"batman and robin"</span>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>237</wp:post_id>
		<wp:post_date>2013-05-19 20:41:59</wp:post_date>
		<wp:post_date_gmt>2013-05-19 20:41:59</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>ruby-string-function-cheatsheet</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="development"><![CDATA[Development]]></category>
		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>seo_follow</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>seo_noindex</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Rails validation and error handling when using Javascript</title>
		<link>http://richtolocka.com/rails-validation-and-error-handling-when-using-javascript/</link>
		<pubDate>Sun, 02 Jun 2013 22:15:10 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://richtolocka.com/?p=245</guid>
		<description></description>
		<content:encoded><![CDATA[This blog deals with the mechanics of passing validations and errors back to your view when using Javascript calls to your controller layer.

<!--more-->

Many many blog posts have dealt with this subject, and there are about 100 ways to attack this problem. This one is mine; I don't claim it to be perfect; instead I'll use it to highlight a few Rails features as we progress.
<h3><span style="font-size: 1.17em;">The flash</span></h3>
My entire strategy hinges on the idea that the Flash is a good thing for validation and error handling. My thinking was: everybody uses the Flash (don't we?) or at least knows about it, therefore this seems understandable and quite conventional.

The following code re-opens ActionController and leverages Rails' filter features to push messages stored in the Flash over to the response header:
<pre>class BaseController &lt; ApplicationController
after_filter :move_flash_to_headers</pre>
<pre>def move_flash_to_headers
 return unless request.xhr?
 response.headers['X-Message'] = flash[:error] unless flash[:error].blank?
 response.headers['X-Message'] = flash[:warning] unless flash[:warning].blank?</pre>
<h3>Message Handler</h3>
Now that your error messages are in the headers, you need to write code (hopefully re-usable) that will allow for those header messages to be displayed to the user without a ton of per-class configuration or code. Accordingly, I put a new js handler into the pipeline called message_handler.js:
<pre>$(document).ajaxComplete(function(e, request, opts) { 
 msg = request.getResponseHeader('X-Message');
 $(".errors").hide();
 $(".errors").html(request.getResponseHeader('X-Message'));
 $(".errors").slideDown();
});</pre>
<h3>Getting It Into the View</h3>
Now that we have some global message handing in place, we'll want to get this code firing in our view classes. For me, this was as simple as adding an errors div into my _messages.html.erb partial, as follows:
<pre>&lt;div class="errors"&gt;
&lt;/div&gt;</pre>
<h3>Controller Handling</h3>
Finally, we need to adjust our controller to put our error messages into the flash. This is really the only portion of this code that isn't (in my opinion) DRY:
<pre>def create
 @title = Title.new(params[:title])
 if @title.save
    @titles = Title.all
    flash[:notice] = "You've created a new title!"
    render 'titles/results.js.erb'
 else
    @title.errors.each do |attribute, errors_array|
    field_errors = attribute.to_s + " " + errors_array
    flash[:error] = field_errors
 end</pre>
<h3>Critiques</h3>
My own critique of this code follows:
<ul>
	<li>Are we properly handling multiple errors and/or validations? Not sure yet.</li>
	<li>Does this handle really fatal scenarios? Doubt it.</li>
	<li>Why all go through all the work to put the messages into the flash when you could probably write some code to put them into the response directly? Dagger!</li>
</ul>
<pre></pre>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>245</wp:post_id>
		<wp:post_date>2013-06-02 22:15:10</wp:post_date>
		<wp:post_date_gmt>2013-06-02 22:15:10</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>rails-validation-and-error-handling-when-using-javascript</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="rails"><![CDATA[Rails]]></category>
		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>seo_follow</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>seo_noindex</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>A conceptual understanding of blocks</title>
		<link>http://richtolocka.com/a-conceptual-understanding-of-blocks/</link>
		<pubDate>Sun, 16 Jun 2013 21:30:51 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://richtolocka.com/?p=254</guid>
		<description></description>
		<content:encoded><![CDATA[Ruby blocks can easily be misunderstood as purely a control flow mechanism - particularly by Java developers who see the "do" and "yield" keywords and jump to a logical, if incorrect, conclusion.

<!--more-->

Like a lot of Ruby concepts, blocks are everywhere yet can be used without fully grokking the underlying concepts. One fundamental piece of understanding is that any time you see code contained within brackets, that is a block:
<pre>5.times { "I'll never go to sleep with the lights off again." }</pre>
Rather than viewing this as syntactical control flow, think of this as "We're going to pass this chunk of code to the 'times' method." Brackets can be replaced with a 'do' and 'end'; this is also a convenient way to immediately comprehend that a <em>block is about to happen:</em>
<pre>5.times do
   "I'll never go to sleep with the lights off again."
   pull_blanket_over_head
end</pre>
Note that both of these examples can be misleading, as they still appear to be control flow mechanisms - nothing dynamic appears to be happening.

Let's look at a more complicated example that uses block arguments. In this case, let's imaging a Monster_Collector class whose job it is to roam an area and collect all the monster men. Later, those monsters are processed. We can allow for some flexibility for what happens to the monster when processed through the use of blocks:
<pre>def class Monster_Collector</pre>
<pre>def process
   <strong>// loop through all the monsters</strong>
      monster.prep # do some stuff to the monster that always happens predictably, pre-processing, here.
      yield(monster)
      monster.banish # do some stuff to the monster that always happens predictably, post-processing, here.
   <strong>// done looping</strong>
end</pre>
<pre>end</pre>
<pre>monster_collector.process do | monster | <strong># 'monster' is a block argument - it will be passed into this block...</strong>
   <strong># ...by the code we're passing the block into - neato, Ma!</strong>
   monster.interrogate
   monster.search_for_clues
end</pre>
Remember, it is helpful to view the above code after the "do" statement as being passed into the 'process' method. The 'monster'  argument (on which we call 'interrogate' and 'search_for_clues') is being yielded by the block-savvy method.

Note that you could call 'process' without passing in a block at all - the code will simply bypass the yield statement as you might expect if you've done any degree of Ruby coding.

Any of the pattern-savvy developers will recognize this as the Strategy pattern; here, we're able to influence (at run-time) the outcome of the 'process' call without necessarily knowing too much about its contents. This allows us to avoid writing 'pointer-heavy' methods that execute code based on explicit direction; the above approach is more de-coupled.

I'll pick this example up later for a more detailed examination of Procs as well as some variations on the above concept.

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>254</wp:post_id>
		<wp:post_date>2013-06-16 21:30:51</wp:post_date>
		<wp:post_date_gmt>2013-06-16 21:30:51</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>a-conceptual-understanding-of-blocks</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>seo_follow</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>seo_noindex</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Mastering your Ruby environment</title>
		<link>http://richtolocka.com/mastering-your-ruby-environment/</link>
		<pubDate>Fri, 05 Jul 2013 13:43:45 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://richtolocka.com/?p=271</guid>
		<description></description>
		<content:encoded><![CDATA[Recently I had an issue where a Gem wouldn't install properly. As it turned out, I was using the wrong <em>type</em> of ruby (more specifically I was using plain ruby instead of ruby-dev, which is a whole other blog post for another day). This ended up being a great opportunity for a blog post on 'mastering your ruby environment.' Like many of my posts, this one is oriented towards basic knowledge that beginners can use.

<!--more-->
<h3>What version of Ruby are you running?</h3>
To determine which version of Ruby is being invoked from the shell, this is relatively straight-forward:
<pre>ruby --version</pre>
This will tell you which version of Ruby you're running, but it's often helpful to know where this version of Ruby is installed. For this, run the Linux command:
<pre>which ruby</pre>
Depending on what the output is, you'll either be shocked or quite bored. Either way, take a look at your $PATH variable to confirm your suspicions about how your particular version of Ruby is being loaded:
<pre>echo $PATH</pre>
<h3>Switching it up</h3>
Should you find yourself wanting to change your Ruby version, it's important to proceed with caution. Ruby comes installed on your system because it's likely to be used by system programs - therefore, it's not a good idea to be removing it or upgrading it in place. Instead, there are a variety of tools used to allow you to switch between various versions of Ruby as needed for development purposes.

The first of these tools is RVM. Short for Ruby Version Manager, RVM does 'a lot' in one package. The second of these tools is rbenv. Rbenv is more modular, using plug-ins to do things like <a href="https://github.com/sstephenson/ruby-build">install particular versions of Ruby</a> or <a href="http://www.bundler.io">manage gem sets</a>. My personal preference is for rbenv, but that's probably because, as a Java developer, I'm more comfortable with the manner in which rbenv works - by manipulating your PATH.

Installing rbenv is pretty straight ahead; I'd highly recommend you install a version of Ruby or two and then switch between them, running ruby --version to confirm that rbenv is working as it should:
<pre>rbenv global 1.9.3-dev</pre>
In this example, we're changing the global version of Ruby. Note that rbenv also allows you to change the local version - by 'local', we mean specific to any particular application located in the folder where we execute the command. The 'local' version will override the 'global' version.
<h3>Gems</h3>
So, now that you've got your Ruby environment squared away, back to those Gems. The easiest way to evaluate your RubyGems installation is to type:
<pre>gem env</pre>
This will tell you which version of RubyGems you're running, and which versions of Ruby that RubyGems is using to run. Fun fact: to find out which Gems you have installed (useful if you have a botched install like I did and want to confirm what Gems survived and which did not), you can run
<pre>gem server</pre>
and then visit http://localhost:8808. You'll see a listing of all your Gems with convenient links back to their home pages, etc.

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>271</wp:post_id>
		<wp:post_date>2013-07-05 13:43:45</wp:post_date>
		<wp:post_date_gmt>2013-07-05 13:43:45</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>mastering-your-ruby-environment</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="ruby"><![CDATA[Ruby]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>image</wp:meta_key>
			<wp:meta_value><![CDATA[]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>seo_follow</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>seo_noindex</wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
